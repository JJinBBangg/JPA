1. 학습내용
 - 스프링 부트 + JPA 활용 (쇼핑몰)
  1. 프로젝트 세팅 및 도메인 분석 
  2. 테이블 및 엔티티설계
  3. 요구사항분석
회원기능 
 1. 등록 
 2. 조회
상품기능
  1. 등록
  2. 수정
  3. 조회
주문기능
  1. 주문
  2. 내역조회
  3. 취소

   4. 어플리캐이션 아키텍쳐
  <계층형구조>
 - controller, web: 웹 계층
 - service: 비지니스 로직, 트렌젝션 처리
 - repository: JPA를 직접 사용하는 계층, 엔티티 매니저 사용
 - domain: 엔티티를 모아두는 계층, 모든 계층에서 사용

각각(Entity, Repository, Service, Test코드)
회원, 상품, 주문 도메인 개발

Web 계층 개발

성능에 관여할 수 있는 요소 정리(JPA 쿼리 튜닝)
1. 테이블 생성 전략 - 조인, 단일테이블, 구현클레스마다구현
2. 기본값 : @XXXToOne(fetch = FetchType.EAGER), @XXXToMany(fetch = FetchType.LAZY) 
   -LAZY(지연로딩) , EAGER(즉시로딩) : LAZY사용을 권장하며 
3. 양방향 연관관계 설정(로직의 연관성을 분석하여 관계의 주인설정) - 착안사항 연관관계의 설정이 잘못되어 불필요한 쿼리가 실행되는경우 성능저하
4. 2번과 관련되어있으나 jpql사용할 때 1차캐시에 없는데이터 사용하는경우 사용할 때마다 가져오는 것이 성능에 관련 있을 수 있으니
    필요한 경우 JPQL의 join fetch기능을 사용하여 한번에 영속성 컨텍스트에 값을 저장하고 사용(EAGER사용은 지양), 엔티티 그래프 기능 사용