1. 학습내용
 - JPA 개요
  1) sql 중심의 개발에서 객체중심의 개발
  2) 생산성
  3) 유지보수
  4) 패러다임 불일치 해소

 - EntityManagerFactory  persistence nuit 기본 커넥션 DB 스키마와 1:1로 매칭
 - EntityManager 1개 connection풀 생성(절대 공유되지않게하고 사용한는 곳 지정) 사용후 반드시 반환
 - EntityTransaction 쿼리 만들어서 실행시킬 1개 단위 생성

 - 영속성 컨텍스트 개념
   entityManager 
   1. 내부 1차 캐시 <- 영속성 컨텍스트로 이해해도됨  (db에 있는 키값과 value(Entity))
   2. find 하게되면 우선적으로 1차캐시를 찾아보게됨
   3. 없으면 db에서 검색한 키값을 찾아서 값을 불러오고
     4. 1차캐시에 저장하게됨
    * 이점이 크게 있어보이지 않는 것이 entitymanager는 1개 트렌젝션이 생성되었다 끝나는시점에 삭제하기때문에 
    1개 비지니스로직이 끝나면 제거함

  기본적으로 jpa에서는 autocommit 옵션이 false인 것을 기본으로하여
    update 같은경우 영속성 컨텍스트에 저장된 값을 변경하게되면(영속성컨텍스트에 persist로 값을 입력한 경우, 삭제인경우 em.remove 되면서 없어지게되면 변경값을 감지)  
  flush 발생 시 최초에  불러왔던 snapshot을 기준으로 변경값이 있을 때 그에 맞는 쿼리문을 작성하고 쓰기 지연 sql문을 작성 (db에서 영구저장되는것이 아니라 sql문이 생성되는 것까지)
    이후 commit() 실행 시 영구적으로 db에 반영
    변경된 값이 있을 시 update 쿼리를 날리게 됨
    영속성컨텍스트에 저장된 값만 변경하고 commit 해야함 (별도로 update 로직을 작성하지 않아도됨 않아야함!)

 각 기능별 database 권한 설정

 -DDL(데이터 정의 언어) : 테이블과 컬럼을 정의하는 명령어로 생성, 수정, 삭제 등의 데이터 전체 골격을 결정하는 역할을 담당한다.
	CREATE	 테이블을 생성하는 역할
	ALTER	 테이블의 구조를 수정하는 역할
	DROP	 테이블을 삭제하는 역할
	RENAME	 테이블을 이름을 변경하는 역할
	TRUNCATE 테이블을 초기화하는 역할

 -DML(데이터 조작 언어) : 데이터베이스의 내부 데이터를 관리하기 위한 언어이다. 데이터를 조회, 추가, 변경, 삭제 등의 작업을 수행하기 위해 사용된다.
	SELECT	데이터베이스에서 데이터를 검색하는 역할
	INSERT	테이블에 데이터를 추가하는 역할
	UPDATE	테이블 내에 존재하는 데이터를 수정하는 역할
	DELETE	테이블에서 데이터를 삭제하는 역할

 -DLC(데이터 제어 언어) : 데이터를 관리 목적으로 보안, 무결성, 회복, 병행 제어 등을 정의하는데 사용한다. DCL을 사용하면 데이터베이스에 접근하여 
			읽거나 쓰는 것을 제한할 수 있는 권한을 부여하거나 박탈할 수 있고 트랜잭션을 명시하거나 조작할 수 있다.
	GRANT	권한을 정의할때 사용하는 명령어
	REVOKE	권한을 삭제할때 사용하는 명령어

 -TCL(트랜잭션 제어 언어) : DCL과 비슷한 맥락이지만 데이터를 제어하는 언어가 아닌 트랜잭션을 제어할때 사용한다. 논리적인 작업 단위를 묶어 DML에 의해 조작된 결과를 트랜잭션 별로 제어한다.
	COMMIT		모든 작업을 정상적으로 처리하겠다는 명령어
	ROLLBACK	모든 작업을 다시 돌려 놓겠다는 명령어
	SAVEPOINT	Commit 전에 특정 시점까지만 반영하거나 Rollback하겠다는 명령어

 - JAVA의 객체와 DB의 TABLE 맵핑
  - 기본키 맵핑
    